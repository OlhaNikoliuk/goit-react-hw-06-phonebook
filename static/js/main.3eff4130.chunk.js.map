{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.styled.js","components/Container/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","App.js","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","actions","state","action","filter","contact","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","rootReducer","contacts","persistReducer","contactsReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ContainerWrap","Container","children","Wrapper","styled","div","Title","h2","Section","title","CustomForm","Label","Input","Button","ContactForm","onSubmit","useState","setName","setNumber","dispatch","useDispatch","onInputChange","e","target","value","preventDefault","contactsActions","autoComplete","size","type","pattern","required","onChange","placeholder","autoFocus","List","ul","ListItem","li","button","ContactList","useSelector","normalizedFilter","toLowerCase","includes","getVisibleContacts","map","onClick","FilterInput","connect","currentTarget","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3eff4130.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContact = createAction('contacts/add', (name, number) => {\n  return {\n    payload: { id: uuidv4(), name, number },\n  };\n});\nexport const deleteContact = createAction('contacts/delete');\nexport const changeFilter = createAction('contacts/changeFilter');\n\n\n\n\n// ===== VANILLA REDUX ===//\n\n//import types from './contacts-types';\n\n// export const addContact = (name, number) => ({\n//   type: types.ADD,\n//   payload: { id: uuidv4(), name, number },\n// });\n\n// export const deleteContact = (contactId) => ({\n//   type: types.DELETE,\n//   payload: contactId,\n// });\n\n// const changeFilter = (value) => ({\n//   type: types.CANGE_FILTER,\n//   payload: value,\n\n// });\n\n// export default { addContact, deleteContact, changeFilter };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport toast from 'react-hot-toast';\nimport * as actions from './contacts-actions'\n// const initialState = JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n\nconst findContact = (allContacts, newContact) => {\n\n  const includedContact = allContacts\n    ? allContacts.find((contact) => contact.name === newContact)\n    : '';\n\n  if (!includedContact) {\n    toast.success(`Contact ${newContact} added to Phonebook`, {\n      duration: 4000,\n      position: 'top-right',\n    });\n    return includedContact;\n  } else {\n    toast.error(`${newContact} is already in contacts.`, {\n      duration: 4000,\n      position: 'top-right',\n    });\n    return includedContact;\n  }\n};\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, action)=>[action.payload, ...state],\n  [actions.deleteContact]: (state, action)=>state.filter((contact) => {\n    return contact.id !== action.payload;\n})})\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, {payload})=>{return payload}\n}) \n\n\n// ===== VANILLA REDUX ===//\n// import types from './contacts-types';\n// const items = (state = initialState, { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       const findName = findContact(state, payload.name);\n\n//       if (findName) return state;\n//       localStorage.setItem('contacts', JSON.stringify([payload, ...state]));\n//       return [payload, ...state];\n\n//     case types.DELETE:\n//       const contacts = state.filter((contact) => {\n//         return contact.id !== payload;\n//       });\n//       localStorage.setItem('contacts', JSON.stringify(contacts));\n//       return contacts;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.CANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer, FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER, } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage' ;\nimport contactsReducer from '../redux/contacts/contacts-reducer';\n\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist:['filter'],\n}\n\nconst rootReducer = combineReducers({\n    contacts: persistReducer(contactsPersistConfig,contactsReducer),\n  })\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store)\n\nexport default {store, persistor};\n\n\n\n// ===== VANILLA REDUX ===//\n\n// import { createStore, combineReducers } from 'redux';\n// import {composeWithDevTools} from 'redux-devtools-extension'\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// })\n//const store = createStore(rootReducer, composeWithDevTools());\n\n\n","import styled from \"@emotion/styled/macro\";\n\nexport const ContainerWrap = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding: 0 15px;\n\n  margin: 0 auto;\n\n  /* background-color: #bcbabe; */\n`;\n","import {ContainerWrap} from './Container.styled'\n\nfunction Container({ children }) {\n  return <ContainerWrap>{children}</ContainerWrap>;\n}\n\nexport default Container;","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  width: 500px;\n  display: block;\n  padding: 20px 30px;\n  margin: 0 auto;\n  margin-top: 40px;\n\n  text-align: center;\n\n  background-color: var(--bg-section);\n  color: var(--text-color-main);\n  border-radius: 4px;\n  box-shadow: 4px 4px 8px 0px rgba(154, 158, 171, 0.2);\n\n  &:not(:last-child) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Title = styled.h2`\n  display: inline-block;\n  align-items: baseline;\n  margin: 0;\n  margin-bottom: 20px;\n  margin-right: 10px;\n  font-size: 32px;\n  font-weight: 700;\n\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\n\nimport {Wrapper, Title} from './Section.styled.js';\n\nfunction Section({ title, children }) {\n  return (\n    <Wrapper>\n      <Title>{title}</Title> {children}\n    </Wrapper>\n  );\n}\n\n\n\nSection.propTypes={\n  title: PropTypes.string,\n}\n\nexport default Section;\n","import styled from \"@emotion/styled/macro\";\n\nexport const CustomForm = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Label = styled.label`\n  display: inline-block;\n  align-items: baseline;\n  text-align: start;\n  font-size: 20px;\n  margin-bottom: 20px;\n\n  & > svg {\n    margin-right: 10px;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  width: 400px;\n  height: 35px;\n\n  border: none;\n  border-radius: 4px;\n  padding-left: 15px;\n  color: #444c5c;\n\n  /* background-color: #9a9eab; */\n\n  &:placeholder-shown {\n    font-size: 14px;\n  }\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border: 1px solid #444c5c;\n    box-shadow: 3px 4px 5px 0px rgb(120 165 163 / 20%);\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  background-color: white;\n  border: none;\n  border-radius: 4px;\n  outline: none;\n  padding: 8px 16px;\n  color: #ec96a4;\n  font-weight: bold;\n  font-size: 14px;\n  line-height: 24px;\n  text-transform: uppercase;\n\n  cursor: pointer;\n\n  margin: 0 auto;\n  margin-top: 15px;\n  transition: all 300ms linear;\n\n  &:hover,\n  &:focus {\n    color: #f1f1f2;\n    background-color: #444c5c;\n    transform: scale(1.03);\n  }\n`;\n\nexport const ErrorMsg = styled.div`\n  font-size: 14px;\n  color: var(--notification-color);\n  margin-bottom: 10px;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FaUserAlt, FaPhoneAlt } from 'react-icons/fa';\nimport * as contactsActions from '../../redux/contacts/contacts-actions';\nimport { CustomForm, Label, Input, Button } from './ContactForm.styled';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const onInputChange = (e) => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(contactsActions.addContact(name, number));\n    // onSubmit({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <CustomForm onSubmit={onFormSubmit} autoComplete='off'>\n        <Label>\n          <FaUserAlt size='16' />\n          Name\n          <Input\n            type='text'\n            name='name'\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={onInputChange}\n            value={name}\n            placeholder='Rosie Simpson'\n            autoFocus\n          />\n        </Label>\n        <Label>\n          <FaPhoneAlt size='16' />\n          Phone\n          <Input\n            type='tel'\n            name='number'\n            pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\n            title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\n            required\n            onChange={onInputChange}\n            value={number}\n            placeholder='38(***) *** ****'\n          />\n        </Label>\n        <Button>Add Contact</Button>\n      </CustomForm>\n    </div>\n  );\n}\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onSubmit: ({ name, number }) =>\n//     dispatch(contactsActions.addContact(name, number)),\n// });\n// export default connect(null, mapDispatchToProps)(ContactForm);\n\nexport default ContactForm;","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  padding: 0;\n  list-style: none;\n  margin: 0;\n  margin-top: 35px;\n\n  font-size: 17px;\n`;\n\nexport const ListItem = styled.li`\n  border: 1px solid white;\n  border-radius: 5px;\n  padding: 8px;\n  display: flex;\n  align-items: center;\n\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n  & > svg {\n    margin-right: 10px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n\n  background-color: white;\n  border: none;\n  border-radius: 4px;\n  outline: none;\n  padding: 4px 8px;\n  color: var(--text-color-accent);\n\n  font-size: 17px;\n  line-height: 20px;\n  text-transform: capitalize;\n\n  cursor: pointer;\n\n  transition: all 300ms linear;\n  margin-left: auto;\n\n  &:hover,\n  &:focus {\n    color: #f1f1f2;\n    background-color: #444c5c;\n    transform: scale(1.03);\n  }\n  & > svg {\n    margin-left: 8px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BsTrashFill } from 'react-icons/bs';\nimport { RiContactsFill } from 'react-icons/ri';\nimport { List, ListItem, Button } from './ContactList.styled';\nimport * as contactsActions from '../../redux/contacts/contacts-actions';\n\nconst getVisibleContacts = (contacts, filter) => {\n  if (!contacts) return;\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nfunction ContactList(/*{ contacts, onDeleteContact }*/) {\n  const contacts = useSelector((state) => {\n    const { filter, items } = state.contacts;\n    const visibleContacts = getVisibleContacts(items, filter);\n\n    return visibleContacts;\n  });\n\n  const dispatch = useDispatch();\n  return (\n    <List>\n      {contacts.map((contact) => {\n        return (\n          <ListItem key={contact.id}>\n            <RiContactsFill size='17' />\n            {contact.name}: {contact.number}\n            <Button type='button' onClick={() => dispatch(contactsActions.deleteContact(contact.id))}>\n              Delete\n              <BsTrashFill></BsTrashFill>\n            </Button>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList\n\n\n\n//===== VANILLA REDUX ===//\n// const mapStateToProps = (state) => {\n//   const { filter, items } = state.contacts;\n//   const visibleContacts = getVisibleContacts(items, filter);\n\n//   return { contacts: visibleContacts };\n// };\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onDeleteContact: (contactId) =>\n//     dispatch(contactsActions.deleteContact(contactId)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import styled from \"@emotion/styled/macro\";\n\nexport const FilterInput = styled.input`\n  margin-top: 5px;\n  margin-bottom: 5px;\n  width: 400px;\n  height: 35px;\n\n  border: none;\n  border-radius: 4px;\n  padding-left: 15px;\n  color: #444c5c;\n\n  &:placeholder-shown {\n    font-size: 14px;\n  }\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border: 1px solid #444c5c;\n    box-shadow: 3px 4px 5px 0px rgb(120 165 163 / 20%);\n  }\n`;\n\nexport const Label = styled.label`\n  text-align: start;\n  display: inline-block;\n  align-items: baseline;\n\n  font-size: 20px;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  & input {\n    margin-top: 5px;\n    width: 400px;\n    height: 35px;\n\n    border: none;\n    border-radius: 4px;\n  }\n  & > svg {\n    margin-right: 10px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FaSearch } from 'react-icons/fa';\nimport { FilterInput, Label } from './Filter.styled';\nimport * as contactsActions from '../../redux/contacts/contacts-actions';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <div>\n      <Label>\n        <FaSearch size='14'></FaSearch>Find contacts by name\n        <FilterInput\n          type='text'\n          name='filter'\n          title='Введите запрос для поиска'\n          required\n          onChange={onChange}\n          value={value}\n        />\n      </Label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) =>\n    dispatch(contactsActions.changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Toaster } from 'react-hot-toast';\nimport { HiUsers } from 'react-icons/hi';\nimport { FaAddressBook } from 'react-icons/fa';\n\nimport Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n// import store from './redux/store';\n\nfunction App() {\n  // const setedContacts = store.getState().contacts.items;\n  \n  return (\n    <Container>\n      <Toaster />\n      <Section title={'Phonebook'}>\n        <FaAddressBook size='24' />\n\n        {<ContactForm /*onSubmit={addContact}*/ />}\n      </Section>\n\n      <Section title={'Contacts'}>\n        <HiUsers size='26' />\n        <Filter /*onChange={changeFilter} value={filter}*/ />\n\n        {/* {setedContacts.length !== 0 && ( */}\n          <ContactList\n          /*contacts={visibleContacts}\n            onDeleteContact={deleteContact}*/\n          />\n        {/* )} */}\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}